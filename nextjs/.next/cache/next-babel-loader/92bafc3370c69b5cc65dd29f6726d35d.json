{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Conf from \"../config/config-dev\";\n/**\n * Request auto complete api .gouv\n */\n\nvar FetchAutoComplete = function FetchAutoComplete() {\n  _classCallCheck(this, FetchAutoComplete);\n\n  _defineProperty(this, \"getAutoCompletion\", function (inputValue, displaySelection) {\n    var query = \"\".concat(Conf.api[\"auto-complet\"].END_POINT).concat(Conf.api[\"auto-complet\"].URI, \"q=\").concat(inputValue, \"?type=housenumber&amp;autocomplete=1\");\n    return fetch(query).then(function (response) {\n      if (response.status === 200) return response.json();else throw new Error(\"Problème de réponse \", response);\n    }).then(function (data) {\n      //console.log(\"Data: \", data);\n      displaySelection(data);\n    });\n  });\n};\n\nexport default FetchAutoComplete;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/services/FetchAutocomplete.js"],"names":["Conf","FetchAutoComplete","inputValue","displaySelection","query","api","END_POINT","URI","fetch","then","response","status","json","Error","data"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AAGA;;;;IAGMC,iB;;;6CAGgB,UAACC,UAAD,EAAaC,gBAAb,EAAkC;AACpD,QAAIC,KAAK,aAAMJ,IAAI,CAACK,GAAL,CAAS,cAAT,EAAyBC,SAA/B,SAA2CN,IAAI,CAACK,GAAL,CAAS,cAAT,EAAyBE,GAApE,eAA4EL,UAA5E,yCAAT;AAEA,WAAOM,KAAK,CAACJ,KAAD,CAAL,CACJK,IADI,CACC,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAT,EAAP,CAA7B,KACK,MAAM,IAAIC,KAAJ,CAAU,sBAAV,EAAkCH,QAAlC,CAAN;AACN,KAJI,EAKJD,IALI,CAKC,UAACK,IAAD,EAAU;AACd;AACAX,MAAAA,gBAAgB,CAACW,IAAD,CAAhB;AACD,KARI,CAAP;AASD,G;;;AAEH,eAAeb,iBAAf","sourcesContent":["import Conf from \"../config/config-dev\";\n\n\n/**\n * Request auto complete api .gouv\n */\nclass FetchAutoComplete {\n\n\n  getAutoCompletion = (inputValue, displaySelection) => {\n    let query = `${Conf.api[\"auto-complet\"].END_POINT}${Conf.api[\"auto-complet\"].URI}q=${inputValue}?type=housenumber&amp;autocomplete=1`;\n\n    return fetch(query)\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        else throw new Error(\"Problème de réponse \", response);\n      })\n      .then((data) => {\n        //console.log(\"Data: \", data);\n        displaySelection(data);\n      });\n  };\n}\nexport default FetchAutoComplete;\n"]},"metadata":{},"sourceType":"module"}