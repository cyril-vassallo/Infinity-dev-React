{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Conf from \"../config/config-dev\";\n/**\n * Request json data from public\n */\n\nclass FetchData {\n  constructor() {\n    _defineProperty(this, \"getData\", (fetchSuccess, fileName = \"productions\") => {\n      let query = `${Conf.app.DOMAINE}data/${fileName}.json`;\n      return fetch(query).then(response => {\n        if (response.status === 200) return response.json();else throw new Error(\"Problème de réponse \", response);\n      }).then(data => {\n        //console.log(\"Data: \", data);\n        fetchSuccess(data);\n      });\n    });\n  }\n\n}\n\nexport default FetchData;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/services/FetchData.js"],"names":["Conf","FetchData","fetchSuccess","fileName","query","app","DOMAINE","fetch","then","response","status","json","Error","data"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AAGA;;;;AAGA,MAAMC,SAAN,CAAgB;AAAA;AAAA,qCACJ,CAACC,YAAD,EAAeC,QAAQ,GAAG,aAA1B,KAA4C;AACpD,UAAIC,KAAK,GAAI,GAAEJ,IAAI,CAACK,GAAL,CAASC,OAAQ,QAAOH,QAAS,OAAhD;AAEA,aAAOI,KAAK,CAACH,KAAD,CAAL,CACJI,IADI,CACEC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAT,EAAP,CAA7B,KACK,MAAM,IAAIC,KAAJ,CAAU,sBAAV,EAAkCH,QAAlC,CAAN;AACN,OAJI,EAKJD,IALI,CAKEK,IAAD,IAAU;AACd;AACAX,QAAAA,YAAY,CAACW,IAAD,CAAZ;AACD,OARI,CAAP;AASD,KAba;AAAA;;AAAA;;AAehB,eAAeZ,SAAf","sourcesContent":["import Conf from \"../config/config-dev\";\n\n\n/**\n * Request json data from public\n */\nclass FetchData {\n  getData = (fetchSuccess, fileName = \"productions\") => {\n    let query = `${Conf.app.DOMAINE}data/${fileName}.json`;\n\n    return fetch(query)\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        else throw new Error(\"Problème de réponse \", response);\n      })\n      .then((data) => {\n        //console.log(\"Data: \", data);\n        fetchSuccess(data);\n      });\n  };\n}\nexport default FetchData;\n"]},"metadata":{},"sourceType":"module"}