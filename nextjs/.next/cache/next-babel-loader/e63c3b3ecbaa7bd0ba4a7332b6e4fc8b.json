{"ast":null,"code":"var _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/players/audio/PlayerAudio.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { openFullscreen, closeFullscreen } from \"../../../services/utils\";\n\nclass PlayerAudio extends Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.state.audioElement = new Audio(\"media/music/\" + props.audio);\n\n      if (this.state.isPlaying) {\n        this.state.audioElement.play();\n      }\n    });\n\n    _defineProperty(this, \"handleClickStopMusic\", () => {\n      closeFullscreen();\n      this.state.audioElement.pause();\n\n      const copyState = _objectSpread({}, this.state);\n\n      copyState.isPlaying = false;\n      this.setState(copyState);\n    });\n\n    _defineProperty(this, \"handleClickPayMusic\", () => {\n      openFullscreen();\n      this.state.audioElement.play();\n\n      const copyState = _objectSpread({}, this.state);\n\n      copyState.isPlaying = true;\n      this.setState(copyState);\n    });\n\n    this.state = {\n      audioElement: null,\n      isPlaying: false\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"player-audio container my-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, this.state.isPlaying ? __jsx(\"button\", {\n      className: \"btn btn-lg btn-danger\",\n      onClick: this.handleClickStopMusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Arr\\xEAter le Mode immersion\") : __jsx(\"button\", {\n      className: \"btn btn-lg btn-success\",\n      onClick: this.handleClickPayMusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Mode immersion\"));\n  }\n\n}\n\nexport default PlayerAudio;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/players/audio/PlayerAudio.jsx"],"names":["React","Component","openFullscreen","closeFullscreen","PlayerAudio","constructor","props","state","audioElement","Audio","audio","isPlaying","play","pause","copyState","setState","render","handleClickStopMusic","handleClickPayMusic"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,EAAwBC,eAAxB,QAA8C,yBAA9C;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,MAAD,EAAO;AAChB,UAAMA,MAAN;;AADgB,+CASE,MAAM;AACxB,WAAKC,KAAL,CAAWC,YAAX,GAA0B,IAAIC,KAAJ,CAAU,iBAAeH,KAAK,CAACI,KAA/B,CAA1B;;AACA,UAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACxB,aAAKJ,KAAL,CAAWC,YAAX,CAAwBI,IAAxB;AACD;AACF,KAdiB;;AAAA,kDAgBK,MAAM;AAC3BT,MAAAA,eAAe;AACf,WAAKI,KAAL,CAAWC,YAAX,CAAwBK,KAAxB;;AACA,YAAMC,SAAS,qBAAQ,KAAKP,KAAb,CAAf;;AACAO,MAAAA,SAAS,CAACH,SAAV,GAAsB,KAAtB;AACA,WAAKI,QAAL,CAAcD,SAAd;AACD,KAtBiB;;AAAA,iDAwBI,MAAM;AAC1BZ,MAAAA,cAAc;AACd,WAAKK,KAAL,CAAWC,YAAX,CAAwBI,IAAxB;;AACA,YAAME,SAAS,qBAAQ,KAAKP,KAAb,CAAf;;AACAO,MAAAA,SAAS,CAACH,SAAV,GAAsB,IAAtB;AACA,WAAKI,QAAL,CAAcD,SAAd;AACD,KA9BiB;;AAEhB,SAAKP,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IADH;AAEXG,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AA4BDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWI,SAAX,GACC;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,KAAKM,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADD,GAQC;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,OAAO,EAAE,KAAKC,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,CADF;AAmBD;;AAvDiC;;AA0DpC,eAAed,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {openFullscreen, closeFullscreen} from \"../../../services/utils\"\n\nclass PlayerAudio extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      audioElement: null,\n      isPlaying: false,\n    };\n  }\n \n\n  componentDidMount = () => {\n    this.state.audioElement = new Audio(\"media/music/\"+props.audio)\n    if (this.state.isPlaying) {\n      this.state.audioElement.play();\n    }\n  };\n\n  handleClickStopMusic = () => {\n    closeFullscreen();\n    this.state.audioElement.pause();\n    const copyState = { ...this.state };\n    copyState.isPlaying = false;\n    this.setState(copyState);\n  };\n\n  handleClickPayMusic = () => {\n    openFullscreen();\n    this.state.audioElement.play();\n    const copyState = { ...this.state };\n    copyState.isPlaying = true;\n    this.setState(copyState);\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"player-audio container my-3 text-center\">\n        {this.state.isPlaying ? (\n          <button\n            className=\"btn btn-lg btn-danger\"\n            onClick={this.handleClickStopMusic}\n          >\n            ArrÃªter le Mode immersion\n          </button>\n        ) : (\n          <button\n            className=\"btn btn-lg btn-success\"\n            onClick={this.handleClickPayMusic}\n          >\n            Mode immersion\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PlayerAudio;\n"]},"metadata":{},"sourceType":"module"}