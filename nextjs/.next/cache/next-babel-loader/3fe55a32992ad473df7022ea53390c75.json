{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/three/planet/Planet.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\nvar Planet = /*#__PURE__*/function (_Component) {\n  _inherits(Planet, _Component);\n\n  var _super = _createSuper(Planet);\n\n  function Planet(props) {\n    var _this;\n\n    _classCallCheck(this, Planet);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.initScene();\n\n      _this.createPlanetMesh(); // this.addEventListeners();\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      //this.removeEventListeners();\n      _this.removeMeshes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addEventListeners\", function () {\n      window.addEventListener(\"resize\", _this.onWindowResize, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeEventListeners\", function () {\n      window.removeEventListener(\"resize\", _this.onWindowResize, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeMeshes\", function () {\n      _this.scene.remove(_this.meshPlanet);\n\n      _this.renderer.renderLists.dispose();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initScene\", function () {\n      var fos = 50;\n      var ratio = 1;\n      var near = 0.1;\n      var far = 200000;\n      _this.camera = new THREE.PerspectiveCamera(fos, ratio, near, far);\n\n      if (window.innerWidth < 500) {\n        _this.distance = 2000;\n      }\n\n      _this.camera.position.z = _this.distance;\n\n      _this.camera.lookAt(_this.scene.position);\n\n      _this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n\n      _this.renderer.setSize(300, 300);\n\n      _this.renderer.setPixelRatio(window.devicePixelRatio);\n\n      _this.canvas = document.querySelector(\"#web-gl-planet\");\n\n      _this.canvas.appendChild(_this.renderer.domElement);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createPlanetMesh\", function () {\n      var texture = new THREE.TextureLoader().load(\"img/card/rock.jpg\");\n      var material = new THREE.MeshBasicMaterial({\n        map: texture,\n        opacity: 1\n      });\n      var geometry = new THREE.SphereBufferGeometry(500, 20, 20);\n      _this.meshPlanet = new THREE.Mesh(geometry, material);\n      _this.meshPlanet.name = \"Planet\";\n      _this.meshPlanet.position.x = 0;\n      _this.meshPlanet.position.y = 0;\n      _this.meshPlanet.position.z = -100;\n\n      _this.scene.add(_this.meshPlanet);\n\n      geometry.dispose();\n      material.dispose();\n      texture.dispose();\n\n      _this.planetAnimationManagement(_this.rotatePlanet, _this.stopRotatePlanet);\n\n      _this.renderer.render(_this.scene, _this.camera);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rotatePlanet\", function () {\n      _this.animation = requestAnimationFrame(_this.rotatePlanet);\n      _this.meshPlanet.rotation.y += 0.002;\n\n      _this.renderer.render(_this.scene, _this.camera);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopRotatePlanet\", function () {\n      if (_this.isRotate) {\n        cancelAnimationFrame(_this.animation);\n\n        _this.renderer.clear();\n\n        _this.renderer.render(_this.scene, _this.camera);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"planetAnimationManagement\", function (rotatePlanet, stopRotatePlanet) {\n      var options = {\n        root: null,\n        rootMargin: \"200px\",\n        threshold: 1.0\n      };\n\n      _this.visibilityCallback = function (entries, observe) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            if (entry.intersectionRatio > 0) {\n              if (!_this.isRotate) {\n                //console.log(\"start rotate Planet\");\n                rotatePlanet();\n                _this.isRotate = true;\n              }\n            }\n          } else {\n            // console.log(\"stop planet\")\n            stopRotatePlanet();\n            _this.isRotate = false;\n          } //\n\n        });\n      };\n\n      var observer = new IntersectionObserver(_this.visibilityCallback, options);\n      observer.observe(_this.canvas);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowResize\", function () {\n      _this.camera.aspect = window.innerWidth / (window.innerHeight / 2);\n\n      _this.camera.updateProjectionMatrix();\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight / 2);\n\n      if (window.innerWidth < 500) {\n        _this.isMobileDevice = true;\n\n        if (_this.isMobileDevice) {\n          _this.distance = 2500;\n          _this.camera.position.z = _this.distance;\n\n          _this.camera.lookAt(_this.scene.position);\n\n          _this.renderer.clear();\n\n          _this.renderer.render(_this.scene, _this.camera);\n        }\n      } else {\n        _this.isMobileDevice = false;\n\n        if (!_this.isMobileDevice) {\n          _this.distance = 1200;\n          _this.camera.position.z = _this.distance;\n\n          _this.camera.lookAt(_this.scene.position);\n\n          _this.renderer.clear();\n\n          _this.renderer.render(_this.scene, _this.camera);\n        }\n      }\n    });\n\n    _this.isMobileDevice = null;\n    _this.scene = new THREE.Scene();\n    _this.camera = null;\n    _this.renderer = null;\n    _this.canvas = null;\n    _this.distance = 1200;\n    _this.meshPlanet = null;\n    _this.isRotate = false;\n    _this.animation = null;\n    return _this;\n  }\n  /**\n   * React\n   * Script Start Execution on component\n   */\n\n\n  _createClass(Planet, [{\n    key: \"render\",\n\n    /**\n     * React render method\n     */\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"web-gl-planet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Planet;\n}(Component);\n\nexport default Planet;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/three/planet/Planet.jsx"],"names":["React","Component","THREE","Planet","props","initScene","createPlanetMesh","removeMeshes","window","addEventListener","onWindowResize","removeEventListener","scene","remove","meshPlanet","renderer","renderLists","dispose","fos","ratio","near","far","camera","PerspectiveCamera","innerWidth","distance","position","z","lookAt","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","canvas","document","querySelector","appendChild","domElement","texture","TextureLoader","load","material","MeshBasicMaterial","map","opacity","geometry","SphereBufferGeometry","Mesh","name","x","y","add","planetAnimationManagement","rotatePlanet","stopRotatePlanet","render","animation","requestAnimationFrame","rotation","isRotate","cancelAnimationFrame","clear","options","root","rootMargin","threshold","visibilityCallback","entries","observe","forEach","entry","isIntersecting","intersectionRatio","observer","IntersectionObserver","aspect","innerHeight","updateProjectionMatrix","isMobileDevice","Scene"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\nclass Planet extends Component {\n  constructor(props) {\n    super(props);\n    this.isMobileDevice = null;\n    this.scene = new THREE.Scene();\n    this.camera = null;\n    this.renderer = null;\n    this.canvas = null;\n    this.distance = 1200;\n    this.meshPlanet = null;\n    this.isRotate = false;\n    this.animation = null;\n\n  }\n\n  /**\n   * React\n   * Script Start Execution on component\n   */\n  componentDidMount = () => {\n    this.initScene();\n    this.createPlanetMesh();\n   // this.addEventListeners();\n  };\n\n  /**\n   * React\n   * Script stop Execution of component\n   */\n  componentWillUnmount = () => {\n    //this.removeEventListeners();\n    this.removeMeshes();\n  };\n\n  /**\n   * javascript\n   * Add events to the component\n   */\n  addEventListeners = () => {\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n  };\n\n  /**\n   * Javascript\n   * Remove events to the component\n   */\n  removeEventListeners = () => {\n    window.removeEventListener(\"resize\", this.onWindowResize, false);\n  };\n\n  /**\n   * Remove meshes elements and elements them self\n   */\n  removeMeshes = () => {\n    this.scene.remove(this.meshPlanet);\n    this.renderer.renderLists.dispose();\n  };\n\n  /**\n   * Three.js\n   * initScene this.scene , this.camera, this.renderer and this.canvas\n   */\n  initScene = () => {\n    const fos = 50;\n    const ratio = 1 ;\n    const near = 0.1;\n    const far = 200000;\n    this.camera = new THREE.PerspectiveCamera(fos, ratio, near, far);\n    if (window.innerWidth < 500) {\n      this.distance = 2000;\n    }\n    this.camera.position.z = this.distance;\n    this.camera.lookAt(this.scene.position);\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n    });\n    this.renderer.setSize(300, 300);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n    this.canvas = document.querySelector(\"#web-gl-planet\");\n\n    this.canvas.appendChild(this.renderer.domElement);\n  };\n\n  /**\n   * Three.js\n   * Create and set the Planet\n   */\n  createPlanetMesh = () => {\n    const texture = new THREE.TextureLoader().load(\"img/card/rock.jpg\");\n    const material = new THREE.MeshBasicMaterial({\n      map: texture,\n      opacity: 1,\n    });\n    const geometry = new THREE.SphereBufferGeometry(500, 20, 20);\n    this.meshPlanet = new THREE.Mesh(geometry, material);\n    this.meshPlanet.name = \"Planet\";\n    this.meshPlanet.position.x = 0;\n    this.meshPlanet.position.y = 0;\n    this.meshPlanet.position.z = -100;\n    this.scene.add(this.meshPlanet);\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n    this.planetAnimationManagement(this.rotatePlanet, this.stopRotatePlanet);\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  /**\n   * three.js\n   * Rotate the planet\n   */\n  rotatePlanet = () => {\n        this.animation = requestAnimationFrame(this.rotatePlanet);\n        this.meshPlanet.rotation.y += 0.002;\n        this.renderer.render(this.scene, this.camera);\n  };\n\n  /**\n   * three.js\n   * Stop the planet rotate\n   */\n  stopRotatePlanet = () => {\n    if(this.isRotate){\n      cancelAnimationFrame(this.animation);\n      this.renderer.clear();\n      this.renderer.render(this.scene, this.camera);\n    }\n  };\n\n  /**\n   * Javascript -  IntersectionObserver  event\n   * Manage planet animation\n   */\n  planetAnimationManagement = (rotatePlanet, stopRotatePlanet) => {\n    const options = {\n      root: null,\n      rootMargin: \"200px\",\n      threshold: 1.0,\n    };\n    this.visibilityCallback = (entries, observe) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.intersectionRatio > 0) {\n            if (!this.isRotate) {\n              //console.log(\"start rotate Planet\");\n              rotatePlanet();\n              this.isRotate = true;\n            }\n          }\n        } else {\n          // console.log(\"stop planet\")\n          stopRotatePlanet();\n          this.isRotate = false;\n        }\n\n        //\n      });\n    };\n    const observer = new IntersectionObserver(this.visibilityCallback, options);\n    observer.observe(this.canvas);\n  };\n\n  /**\n   * Javascript\n   * Redefine camera view and camera ration on resize event\n   */\n  onWindowResize = () => {\n    this.camera.aspect = window.innerWidth / (window.innerHeight / 2);\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight / 2);\n    if (window.innerWidth < 500) {\n      this.isMobileDevice = true;\n      if (this.isMobileDevice) {\n        this.distance = 2500;\n        this.camera.position.z = this.distance;\n        this.camera.lookAt(this.scene.position);\n        this.renderer.clear();\n        this.renderer.render(this.scene, this.camera);\n      }\n    } else {\n      this.isMobileDevice = false;\n      if (!this.isMobileDevice) {\n        this.distance = 1200;\n        this.camera.position.z = this.distance;\n        this.camera.lookAt(this.scene.position);\n        this.renderer.clear();\n        this.renderer.render(this.scene, this.camera);\n      }\n    }\n  };\n\n  /**\n   * React render method\n   */\n  render() {\n    return <div id=\"web-gl-planet\"></div>;\n  }\n}\n\nexport default Planet;\n"]},"metadata":{},"sourceType":"module"}