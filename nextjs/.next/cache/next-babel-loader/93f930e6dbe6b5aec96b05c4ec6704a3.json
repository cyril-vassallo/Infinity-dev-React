{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Conf from \"../config/config-dev\";\n/**\n * Request json data from public\n */\n\nvar FetchData = function FetchData() {\n  _classCallCheck(this, FetchData);\n\n  _defineProperty(this, \"getData\", function (fetchSuccess) {\n    var fileName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"productions\";\n    var query = \"\".concat(Conf.app.DOMAINE, \"data/\").concat(fileName, \".json\");\n    return fetch(query).then(function (response) {\n      if (response.status === 200) return response.json();else throw new Error(\"Problème de réponse \", response);\n    }).then(function (data) {\n      //console.log(\"Data: \", data);\n      fetchSuccess(data);\n    });\n  });\n};\n\nexport default FetchData;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/services/FetchData.js"],"names":["Conf","FetchData","fetchSuccess","fileName","query","app","DOMAINE","fetch","then","response","status","json","Error","data"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AAGA;;;;IAGMC,S;;;mCACM,UAACC,YAAD,EAA4C;AAAA,QAA7BC,QAA6B,uEAAlB,aAAkB;AACpD,QAAIC,KAAK,aAAMJ,IAAI,CAACK,GAAL,CAASC,OAAf,kBAA8BH,QAA9B,UAAT;AAEA,WAAOI,KAAK,CAACH,KAAD,CAAL,CACJI,IADI,CACC,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAT,EAAP,CAA7B,KACK,MAAM,IAAIC,KAAJ,CAAU,sBAAV,EAAkCH,QAAlC,CAAN;AACN,KAJI,EAKJD,IALI,CAKC,UAACK,IAAD,EAAU;AACd;AACAX,MAAAA,YAAY,CAACW,IAAD,CAAZ;AACD,KARI,CAAP;AASD,G;;;AAEH,eAAeZ,SAAf","sourcesContent":["import Conf from \"../config/config-dev\";\n\n\n/**\n * Request json data from public\n */\nclass FetchData {\n  getData = (fetchSuccess, fileName = \"productions\") => {\n    let query = `${Conf.app.DOMAINE}data/${fileName}.json`;\n\n    return fetch(query)\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        else throw new Error(\"Problème de réponse \", response);\n      })\n      .then((data) => {\n        //console.log(\"Data: \", data);\n        fetchSuccess(data);\n      });\n  };\n}\nexport default FetchData;\n"]},"metadata":{},"sourceType":"module"}