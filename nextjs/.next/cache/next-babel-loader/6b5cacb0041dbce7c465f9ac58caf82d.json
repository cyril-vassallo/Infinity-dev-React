{"ast":null,"code":"var _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/weather/Weather.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport FetchWeather from \"../../services/FetchWeather\";\nimport \"./weather.css\";\nimport Widget from \"./widget/Widget\";\nimport Loader from \"../loader/Loader\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChangeCity\", ({\n      target\n    }) => {\n      const city = target.value; //console.log(\"Dans handleChangeCity : \", city);\n\n      const copyState = _objectSpread({}, this.state);\n\n      copyState.fetchWeather = new FetchWeather(city);\n      copyState.fetchWeather.getCurrentWeather(this.successGetCurrentWeather, this.failedGetCurrentWeather);\n      this.setState(copyState);\n      this.setLoading();\n    });\n\n    _defineProperty(this, \"setLoading\", () => {\n      const copyState = _objectSpread({}, this.state);\n\n      copyState.isLoading = true;\n      this.setState(copyState);\n    });\n\n    _defineProperty(this, \"successGetCurrentWeather\", currentWeather => {\n      const copyState = _objectSpread({}, this.state); // console.log(\"Dans successGetCurrentWeather : \", currentWeather);\n\n\n      copyState.currentWeather = currentWeather;\n      copyState.isLoading = false;\n      this.setState(copyState);\n    });\n\n    _defineProperty(this, \"failedGetCurrentWeather\", error => {\n      console.log(\"Dans failedGetCurrentWeather\", error);\n    });\n\n    this.state = {\n      currentWeather: null,\n      fetchWeather: new FetchWeather(\"Paris\"),\n      isLoading: false\n    };\n  }\n  /**\n   * Launch fetchWeather onChange\n   */\n\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container weather \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Widget M\\xE9t\\xE9o\"), __jsx(\"p\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"Choisissez une ville pour obtenir la m\\xE9t\\xE9o des 3 prochaines heures.\"), __jsx(\"select\", {\n      id: \"city\",\n      className: \"form-control\",\n      onChange: this.handleChangeCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, __jsx(\"option\", {\n      value: \"Paris\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"--Choisissez une ville--\"), __jsx(\"option\", {\n      value: \"Montpellier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Montpellier\"), __jsx(\"option\", {\n      value: \"Paris\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Paris\"), __jsx(\"option\", {\n      value: \"Marseilles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Marseilles\"), __jsx(\"option\", {\n      value: \"Bordeaux\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Bordeaux\"), __jsx(\"option\", {\n      value: \"Tours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Tours\"), __jsx(\"option\", {\n      value: \"Toulouse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Toulouse\"), __jsx(\"option\", {\n      value: \"Lyon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Lyon\")), this.state.isLoading && __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    })), this.state.currentWeather && !this.state.isLoading && __jsx(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, __jsx(Widget, {\n      main: this.state.currentWeather.main,\n      weather: this.state.currentWeather.weather[0],\n      city: this.state.currentWeather.name,\n      wind: this.state.currentWeather.wind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/weather/Weather.jsx"],"names":["React","Component","FetchWeather","Widget","Loader","Weather","constructor","props","target","city","value","copyState","state","fetchWeather","getCurrentWeather","successGetCurrentWeather","failedGetCurrentWeather","setState","setLoading","isLoading","currentWeather","error","console","log","render","handleChangeCity","main","weather","name","wind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FetchWeather from \"../../services/FetchWeather\";\nimport \"./weather.css\";\nimport Widget from \"./widget/Widget\";\nimport Loader from \"../loader/Loader\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentWeather: null,\n      fetchWeather : new FetchWeather(\"Paris\"),\n      isLoading : false\n    };\n  }\n\n  /**\n   * Launch fetchWeather onChange\n   */\n  handleChangeCity = ({target}) => {\n    const city = target.value\n    //console.log(\"Dans handleChangeCity : \", city);\n    const copyState = { ...this.state };\n    copyState.fetchWeather = new FetchWeather(city);\n    copyState.fetchWeather.getCurrentWeather(\n      this.successGetCurrentWeather,\n      this.failedGetCurrentWeather\n      );\n    this.setState(copyState);\n    this.setLoading();\n    \n  }\n\n  setLoading = () => {\n    const copyState = { ...this.state };\n    copyState.isLoading = true;\n    this.setState(copyState);\n  }\n\n  /**\n   * Called if fetch success\n   * @param {object} currentWeather\n   */\n  successGetCurrentWeather = (currentWeather) => {\n    const copyState = { ...this.state };\n   // console.log(\"Dans successGetCurrentWeather : \", currentWeather);\n    copyState.currentWeather = currentWeather;\n    copyState.isLoading = false;\n    this.setState(copyState);\n  };\n\n  /**\n   * Called if fetch failed\n   * @param {object} currentWeather\n   */\n  failedGetCurrentWeather = (error) => {\n    console.log(\"Dans failedGetCurrentWeather\", error);\n  };\n\n  render() {\n    return (\n        <div className=\"container weather \">\n          <div className=\"row mt-5\">\n            <div className=\"col-md mb-5\">\n              <h3 className=\"text-primary\">Widget Météo</h3>\n              <p className=\"text-secondary\">\n                Choisissez une ville pour obtenir la météo des 3 prochaines\n                heures.\n              </p>\n              <select\n                id=\"city\"\n                className=\"form-control\"\n                onChange={this.handleChangeCity}\n              >\n                <option value=\"Paris\">--Choisissez une ville--</option>\n                <option value=\"Montpellier\">Montpellier</option>\n                <option value=\"Paris\">Paris</option>\n                <option value=\"Marseilles\">Marseilles</option>\n                <option value=\"Bordeaux\">Bordeaux</option>\n                <option value=\"Tours\">Tours</option>\n                <option value=\"Toulouse\">Toulouse</option>\n                <option value=\"Lyon\">Lyon</option>\n              </select>\n              {this.state.isLoading && <Loader />}\n            </div>\n            {this.state.currentWeather && !this.state.isLoading && (\n              <div className=\"col\">\n                <Widget\n                  main={this.state.currentWeather.main}\n                  weather={this.state.currentWeather.weather[0]}\n                  city={this.state.currentWeather.name}\n                  wind={this.state.currentWeather.wind}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}