{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/map/Map.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FetchAutocomplete from \"../../services/FetchAutocomplete\";\nimport Leaflet from \"leaflet\";\nimport FetchMapQuest from \"../../services/FetchMapQuest\";\nimport Conf from \"../../config/config-dev\";\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.select = document.getElementById(\"selection\");\n      document.getElementById(\"adresse\").addEventListener(\"input\", _this.autocompleteAdresse, false);\n\n      _this.displayMap();\n\n      _this.displayMarker(\"Point de départ: Résidence de Cyril\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayMap\", function () {\n      var token = Conf.api[\"map-box\"].APPID;\n      _this.map = Leaflet.map(\"map\").setView([_this.longitude, _this.latitude], 13);\n      Leaflet.tileLayer(\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\", {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 20,\n        minZoom: 5,\n        id: \"mapbox/streets-v11\",\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: token\n      }).addTo(_this.map);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayMarker\", function () {\n      var popup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Marker\";\n      var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"blue\";\n      var longitude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.longitude;\n      var latitude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _this.latitude;\n      //delete original src from Leaflet icon in prototype\n      delete Leaflet.Icon.Default.prototype._getIconUrl; //Load new icon in local leaflet bundle in module for different devices\n\n      Leaflet.Icon.Default.mergeOptions({\n        iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x-\".concat(color, \".png\")),\n        iconUrl: require(\"leaflet/dist/images/marker-icon-\".concat(color, \".png\")),\n        shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n      });\n      var marker = Leaflet.marker([longitude, latitude]).addTo(_this.map);\n      marker.bindPopup(popup).openPopup();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"displayPolylinePath\", function () {\n      var polyline = Leaflet.polyline(_this.polylinePath, {\n        color: _this.pathColors[_this.countPaths]\n      }).addTo(_this.map);\n\n      _this.map.fitBounds(polyline.getBounds());\n\n      if (_this.countPaths === _this.pathColors.length - 1) {\n        _this.countPaths = 0;\n      } else {\n        _this.countPaths++;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchMapQuestSuccess\", function (shapePoints) {\n      var newPolylinePath = [];\n\n      for (var i = 0; i < shapePoints.length; i += 2) {\n        newPolylinePath.push([shapePoints[i], shapePoints[i + 1]]);\n\n        if (i + 1 === shapePoints.length - 1) {\n          var destination = _this.road + \" \" + _this.zipCode + \" \" + _this.city;\n\n          _this.displayMarker(destination, \"red\", shapePoints[i], shapePoints[i + 1]);\n        }\n      }\n\n      _this.polylinePath = newPolylinePath;\n\n      _this.displayPolylinePath();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"autocompleteAdresse\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var inputValue;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              inputValue = document.getElementById(\"adresse\").value;\n\n              if (!inputValue) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _this.autocomplete.getAutoCompletion(inputValue, _this.displaySelection);\n\n            case 5:\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              _this.select.style.display = \"block\";\n              _this.select.innerHTML = \"Erreur la requête n'a pas pu aboutir :\" + _context.t0;\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              _this.select.style.display = \"none\";\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"displaySelection\", function (response) {\n      if (Object.keys(response.features).length > 0) {\n        _this.select.style.display = \"block\";\n\n        if (_this.select.childElementCount !== 0) {\n          _this.select.removeChild(_this.select.firstChild);\n        }\n\n        var ul = document.createElement(\"ul\");\n\n        _this.select.appendChild(ul);\n\n        response.features.forEach(function (element) {\n          var li = document.createElement(\"li\");\n          var ligneAdresse = document.createElement(\"span\");\n          var infosAdresse = document.createTextNode(element.properties.postcode + \" \" + element.properties.city);\n          ligneAdresse.innerHTML = element.properties.name;\n          li.addEventListener(\"click\", function () {\n            document.getElementById(\"adresse\").value = element.properties.name + \" \" + element.properties.postcode + \" \" + element.properties.city;\n            document.getElementById(\"selection\").style.display = \"none\";\n            document.getElementById(\"resAdresse\").value = element.properties.name;\n            document.getElementById(\"CP\").value = element.properties.postcode;\n            document.getElementById(\"Ville\").value = element.properties.city;\n          });\n          li.appendChild(ligneAdresse);\n          li.appendChild(infosAdresse);\n          ul.appendChild(li);\n        });\n      } else {\n        _this.select.style.display = \"none\";\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickRoute\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, sessionId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.road = document.getElementById(\"resAdresse\").value;\n              _this.zipCode = document.getElementById(\"CP\").value;\n              _this.city = document.getElementById(\"Ville\").value;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _this.mapQuest.getRoute(_this.road, _this.zipCode, _this.city);\n\n            case 6:\n              data = _context2.sent;\n\n              _this.displayNewRouteData(data);\n\n              sessionId = data.route.sessionId;\n              _context2.next = 11;\n              return _this.mapQuest.getShape(sessionId, _this.fetchMapQuestSuccess);\n\n            case 11:\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 13]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"displayNewRouteData\", function (_ref3) {\n      var route = _ref3.route;\n\n      var copyState = _objectSpread({}, _this.state);\n\n      copyState.route = route;\n\n      _this.setState(copyState);\n    });\n\n    _this.select = null;\n    _this.autocomplete = new FetchAutocomplete();\n    _this.mapQuest = new FetchMapQuest();\n    _this.map = null;\n    _this.longitude = 43.64;\n    _this.latitude = 3.8635;\n    _this.zipCode = null;\n    _this.road = null;\n    _this.city = null;\n    _this.polylinePath = [];\n    _this.pathColors = [\"blue\", \"green\", \"red\", \"purple\"];\n    _this.countPaths = 0;\n    _this.state = {\n      route: null\n    };\n    return _this;\n  }\n  /**\n   * React\n   * Execute just after the component has been mounted\n   */\n\n\n  _createClass(Map, [{\n    key: \"render\",\n\n    /**\n     * React \n     * Render component\n     */\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"row my-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, __jsx(\"h3\", {\n        className: \"text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, \"Widget Itin\\xE9raire\"), __jsx(\"p\", {\n        className: \"my-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, \"Leaflet, MapQuest et API adresse.gouv. Une combinaison d'api et de composants gratuits pour tracer vos itin\\xE9raires.\"))), __jsx(\"div\", {\n        className: \"row my-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, \"Activit\\xE9 en r\\xE9gie ?\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, \"Pour avoir une vue d'ensemble, utilisez le champ d'autocompl\\xE9tion pour tracer les itin\\xE9raires de chez moi \\xE0 vos \\xE9tablissements d'entreprise ou ceux de vos clients.\"), __jsx(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Votre adresse\",\n        id: \"adresse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        id: \"selection\",\n        className: \"dropdown\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }))), __jsx(\"div\", {\n        className: \"row \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"col-md-4  m-1 text-center bg-light card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, \"Itin\\xE9raire pour :\"), __jsx(\"input\", {\n        className: \"form-control my-3\",\n        type: \"text\",\n        id: \"resAdresse\",\n        placeholder: \"adresse\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }), __jsx(\"input\", {\n        className: \"form-control my-3\",\n        type: \"text\",\n        id: \"CP\",\n        placeholder: \"code postal\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }), __jsx(\"input\", {\n        className: \"form-control my-3 \",\n        type: \"text\",\n        id: \"Ville\",\n        placeholder: \"ville\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }), __jsx(\"button\", {\n        onClick: this.handleClickRoute,\n        className: \"btn btn-lg btn-success my-5\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      }, \"Afficher le tracer !\"), this.state.route && __jsx(\"p\", {\n        className: \"text-success my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, \"Il me faudra parcourir\", \" \", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, Math.trunc(this.state.route.distance * 1.60934), \" Km\"), \" en voiture pour me rendre \\xE0 votre entreprise.\")), __jsx(\"div\", {\n        className: \"col m-1 card\",\n        id: \"map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/map/Map.jsx"],"names":["React","Component","FetchAutocomplete","Leaflet","FetchMapQuest","Conf","Map","props","select","document","getElementById","addEventListener","autocompleteAdresse","displayMap","displayMarker","token","api","APPID","map","setView","longitude","latitude","tileLayer","attribution","maxZoom","minZoom","id","tileSize","zoomOffset","accessToken","addTo","popup","color","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","marker","bindPopup","openPopup","polyline","polylinePath","pathColors","countPaths","fitBounds","getBounds","length","shapePoints","newPolylinePath","i","push","destination","road","zipCode","city","displayPolylinePath","inputValue","value","autocomplete","getAutoCompletion","displaySelection","style","display","innerHTML","response","Object","keys","features","childElementCount","removeChild","firstChild","ul","createElement","appendChild","forEach","element","li","ligneAdresse","infosAdresse","createTextNode","properties","postcode","name","mapQuest","getRoute","data","displayNewRouteData","sessionId","route","getShape","fetchMapQuestSuccess","console","log","copyState","state","setState","handleClickRoute","Math","trunc","distance"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FetchAutocomplete from \"../../services/FetchAutocomplete\";\nimport Leaflet from \"leaflet\";\nimport FetchMapQuest from \"../../services/FetchMapQuest\";\nimport Conf from \"../../config/config-dev\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.select = null;\n    this.autocomplete = new FetchAutocomplete();\n    this.mapQuest = new FetchMapQuest();\n    this.map = null;\n    this.longitude = 43.64;\n    this.latitude = 3.8635;\n    this.zipCode = null;\n    this.road = null;\n    this.city = null;\n    this.polylinePath = [];\n    this.pathColors = [\"blue\", \"green\",\"red\",\"purple\"];\n    this.countPaths = 0;\n    this.state = {\n      route: null,\n    };\n  }\n\n  /**\n   * React\n   * Execute just after the component has been mounted\n   */\n  componentDidMount = () => {\n    this.select = document.getElementById(\"selection\");\n    document\n      .getElementById(\"adresse\")\n      .addEventListener(\"input\", this.autocompleteAdresse, false);\n    this.displayMap();\n    this.displayMarker(\"Point de départ: Résidence de Cyril\");\n  };\n\n  /**\n   * Display map with Leaflet\n   */\n  displayMap = () => {\n    const token = Conf.api[\"map-box\"].APPID;\n    this.map = Leaflet.map(\"map\").setView([this.longitude, this.latitude], 13);\n    Leaflet.tileLayer(\n      `https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}`,\n      {\n        attribution:\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 20,\n        minZoom: 5,\n        id: \"mapbox/streets-v11\",\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: token,\n      }\n    ).addTo(this.map);\n  };\n\n\n  /**\n   * Display Marker method \n   * @param {string} popup \n   * @param {color} color \n   * @param {longitude} longitude \n   * @param {latitude} latitude \n   */\n  displayMarker = (\n    popup = \"Marker\",\n    color = \"blue\",\n    longitude = this.longitude,\n    latitude = this.latitude\n  ) => {\n    //delete original src from Leaflet icon in prototype\n    delete Leaflet.Icon.Default.prototype._getIconUrl;\n    //Load new icon in local leaflet bundle in module for different devices\n    Leaflet.Icon.Default.mergeOptions({\n      iconRetinaUrl: require(`leaflet/dist/images/marker-icon-2x-${color}.png`),\n      iconUrl: require(`leaflet/dist/images/marker-icon-${color}.png`),\n      shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n    });\n    const marker = Leaflet.marker([longitude, latitude]).addTo(this.map);\n    marker.bindPopup(popup).openPopup();\n  };\n\n  /**\n   * Draw the polyline according to polylinePath variable\n   */\n  displayPolylinePath = () => {\n    const polyline = Leaflet.polyline(this.polylinePath, {\n      color: this.pathColors[this.countPaths],\n    }).addTo(this.map);\n \n    this.map.fitBounds(polyline.getBounds());\n    if(this.countPaths === this.pathColors.length-1){\n      this.countPaths = 0;\n    }else{\n      this.countPaths++;\n    }\n    \n  };\n\n\n  /**\n   * Called when fetchMapQuest success\n   * @param {array} shapePoints \n   */\n  fetchMapQuestSuccess = (shapePoints) => {\n    const newPolylinePath = [];\n    for (let i = 0; i < shapePoints.length; i += 2) {\n      newPolylinePath.push([shapePoints[i], shapePoints[i + 1]]);\n      if (i + 1 === shapePoints.length - 1) {\n        let destination = this.road + \" \" + this.zipCode + \" \" + this.city;\n        this.displayMarker(\n          destination,\n          \"red\",\n          shapePoints[i],\n          shapePoints[i + 1]\n        );\n      }\n    }\n    this.polylinePath = newPolylinePath;\n    this.displayPolylinePath();\n  };\n\n  /**\n   * Fetch autocomplete api \n   */\n  autocompleteAdresse = async () => {\n    let inputValue = document.getElementById(\"adresse\").value;\n\n    if (inputValue) {\n      try {\n        await this.autocomplete.getAutoCompletion(\n          inputValue,\n          this.displaySelection\n        );\n      } catch (error) {\n        this.select.style.display = \"block\";\n        this.select.innerHTML =\n          \"Erreur la requête n'a pas pu aboutir :\" + error;\n      }\n    } else {\n      this.select.style.display = \"none\";\n    }\n  };\n\n/**\n * Display selection and fill filed when click on one item\n * Called when fetch success \n * @param {object} response \n */\n  displaySelection = (response) => {\n    if (Object.keys(response.features).length > 0) {\n      this.select.style.display = \"block\";\n      if (this.select.childElementCount !== 0) {\n        this.select.removeChild(this.select.firstChild);\n      }\n      let ul = document.createElement(\"ul\");\n      this.select.appendChild(ul);\n\n      response.features.forEach(function (element) {\n        let li = document.createElement(\"li\");\n        let ligneAdresse = document.createElement(\"span\");\n        let infosAdresse = document.createTextNode(\n          element.properties.postcode + \" \" + element.properties.city\n        );\n\n        ligneAdresse.innerHTML = element.properties.name;\n        li.addEventListener(\"click\", () => {\n          document.getElementById(\"adresse\").value =\n            element.properties.name +\n            \" \" +\n            element.properties.postcode +\n            \" \" +\n            element.properties.city;\n          document.getElementById(\"selection\").style.display = \"none\";\n\n          document.getElementById(\"resAdresse\").value = element.properties.name;\n          document.getElementById(\"CP\").value = element.properties.postcode;\n          document.getElementById(\"Ville\").value = element.properties.city;\n        });\n        li.appendChild(ligneAdresse);\n        li.appendChild(infosAdresse);\n        ul.appendChild(li);\n      });\n    } else {\n      this.select.style.display = \"none\";\n    }\n  };\n\n  /**\n   * Event on click\n   * Fetch MapQuest api to get the route direction and then related shapes according\n   */\n  handleClickRoute = async () => {\n    this.road = document.getElementById(\"resAdresse\").value;\n    this.zipCode = document.getElementById(\"CP\").value;\n    this.city = document.getElementById(\"Ville\").value;\n    try {\n      const data = await this.mapQuest.getRoute(\n        this.road,\n        this.zipCode,\n        this.city\n      );\n      this.displayNewRouteData(data);\n      const sessionId = data.route.sessionId;\n      await this.mapQuest.getShape(sessionId, this.fetchMapQuestSuccess);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /**\n   * Set a new route data in state\n   * @param {object} data  \n   */\n  displayNewRouteData = ({ route }) => {\n    const copyState = { ...this.state };\n    copyState.route = route;\n    this.setState(copyState);\n  };\n\n  /**\n   * React \n   * Render component\n   */\n  render() {\n    return (\n      <div className=\"container panel\">\n        <div className=\"row my-5\">\n          <div className=\"col\">\n            <h3 className=\"text-primary\">Widget Itinéraire</h3>\n            <p className=\"my-5\">\n              Leaflet, MapQuest et API adresse.gouv. Une combinaison d'api et de\n              composants gratuits pour tracer vos itinéraires.\n            </p>\n          </div>\n        </div>\n        <div className=\"row my-5\">\n          <div className=\"col\">\n            <p>Activité en régie ?</p>\n            <p>\n              Pour avoir une vue d'ensemble, utilisez le champ d'autocomplétion\n              pour tracer les itinéraires de chez moi à vos établissements\n              d'entreprise ou ceux de vos clients.\n            </p>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Votre adresse\"\n              id=\"adresse\"\n            />\n            <div\n              id=\"selection\"\n              className=\"dropdown\"\n              style={{ display: \"none\" }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-md-4  m-1 text-center bg-light card\">\n            <p>Itinéraire pour :</p>\n            <input\n              className=\"form-control my-3\"\n              type=\"text\"\n              id=\"resAdresse\"\n              placeholder=\"adresse\"\n              disabled\n            />\n            <input\n              className=\"form-control my-3\"\n              type=\"text\"\n              id=\"CP\"\n              placeholder=\"code postal\"\n              disabled\n            />\n\n            <input\n              className=\"form-control my-3 \"\n              type=\"text\"\n              id=\"Ville\"\n              placeholder=\"ville\"\n              disabled\n            />\n            <button\n              onClick={this.handleClickRoute}\n              className=\"btn btn-lg btn-success my-5\"\n              type=\"button\"\n            >\n              Afficher le tracer !\n            </button>\n            {this.state.route && (\n              <p className=\"text-success my-3\">\n                Il me faudra parcourir{\" \"}\n                <b>{Math.trunc(this.state.route.distance * 1.60934)} Km</b> en\n                voiture pour me rendre à votre entreprise.\n              </p>\n            )}\n          </div>\n          <div className=\"col m-1 card\" id=\"map\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}