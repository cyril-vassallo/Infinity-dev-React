{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/players/audio/PlayerAudio.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { openFullscreen, closeFullscreen } from \"../../../services/utils\";\n\nvar PlayerAudio = /*#__PURE__*/function (_Component) {\n  _inherits(PlayerAudio, _Component);\n\n  var _super = _createSuper(PlayerAudio);\n\n  function PlayerAudio(_props) {\n    var _this;\n\n    _classCallCheck(this, PlayerAudio);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.state.audioElement = new Audio(\"media/music/\" + props.audio);\n\n      if (_this.state.isPlaying) {\n        _this.state.audioElement.play();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickStopMusic\", function () {\n      closeFullscreen();\n\n      _this.state.audioElement.pause();\n\n      var copyState = _objectSpread({}, _this.state);\n\n      copyState.isPlaying = false;\n\n      _this.setState(copyState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickPayMusic\", function () {\n      openFullscreen();\n\n      _this.state.audioElement.play();\n\n      var copyState = _objectSpread({}, _this.state);\n\n      copyState.isPlaying = true;\n\n      _this.setState(copyState);\n    });\n\n    _this.state = {\n      audioElement: null,\n      isPlaying: false\n    };\n    return _this;\n  }\n\n  _createClass(PlayerAudio, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"player-audio container my-3 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, this.state.isPlaying ? __jsx(\"button\", {\n        className: \"btn btn-lg btn-danger\",\n        onClick: this.handleClickStopMusic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Arr\\xEAter le Mode immersion\") : __jsx(\"button\", {\n        className: \"btn btn-lg btn-success\",\n        onClick: this.handleClickPayMusic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \"Mode immersion\"));\n    }\n  }]);\n\n  return PlayerAudio;\n}(Component);\n\nexport default PlayerAudio;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/players/audio/PlayerAudio.jsx"],"names":["React","Component","openFullscreen","closeFullscreen","PlayerAudio","props","state","audioElement","Audio","audio","isPlaying","play","pause","copyState","setState","handleClickStopMusic","handleClickPayMusic"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,EAAwBC,eAAxB,QAA8C,yBAA9C;;IAEMC,W;;;;;AACJ,uBAAYC,MAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,MAAN;;AADgB,wEASE,YAAM;AACxB,YAAKC,KAAL,CAAWC,YAAX,GAA0B,IAAIC,KAAJ,CAAU,iBAAeH,KAAK,CAACI,KAA/B,CAA1B;;AACA,UAAI,MAAKH,KAAL,CAAWI,SAAf,EAA0B;AACxB,cAAKJ,KAAL,CAAWC,YAAX,CAAwBI,IAAxB;AACD;AACF,KAdiB;;AAAA,2EAgBK,YAAM;AAC3BR,MAAAA,eAAe;;AACf,YAAKG,KAAL,CAAWC,YAAX,CAAwBK,KAAxB;;AACA,UAAMC,SAAS,qBAAQ,MAAKP,KAAb,CAAf;;AACAO,MAAAA,SAAS,CAACH,SAAV,GAAsB,KAAtB;;AACA,YAAKI,QAAL,CAAcD,SAAd;AACD,KAtBiB;;AAAA,0EAwBI,YAAM;AAC1BX,MAAAA,cAAc;;AACd,YAAKI,KAAL,CAAWC,YAAX,CAAwBI,IAAxB;;AACA,UAAME,SAAS,qBAAQ,MAAKP,KAAb,CAAf;;AACAO,MAAAA,SAAS,CAACH,SAAV,GAAsB,IAAtB;;AACA,YAAKI,QAAL,CAAcD,SAAd;AACD,KA9BiB;;AAEhB,UAAKP,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,IADH;AAEXG,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFgB;AAMjB;;;;6BA4BQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWI,SAAX,GACC;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,OAAO,EAAE,KAAKK,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADD,GAQC;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,KAAKC,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATJ,CADF;AAmBD;;;;EAvDuBf,S;;AA0D1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {openFullscreen, closeFullscreen} from \"../../../services/utils\"\n\nclass PlayerAudio extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      audioElement: null,\n      isPlaying: false,\n    };\n  }\n \n\n  componentDidMount = () => {\n    this.state.audioElement = new Audio(\"media/music/\"+props.audio)\n    if (this.state.isPlaying) {\n      this.state.audioElement.play();\n    }\n  };\n\n  handleClickStopMusic = () => {\n    closeFullscreen();\n    this.state.audioElement.pause();\n    const copyState = { ...this.state };\n    copyState.isPlaying = false;\n    this.setState(copyState);\n  };\n\n  handleClickPayMusic = () => {\n    openFullscreen();\n    this.state.audioElement.play();\n    const copyState = { ...this.state };\n    copyState.isPlaying = true;\n    this.setState(copyState);\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"player-audio container my-3 text-center\">\n        {this.state.isPlaying ? (\n          <button\n            className=\"btn btn-lg btn-danger\"\n            onClick={this.handleClickStopMusic}\n          >\n            ArrÃªter le Mode immersion\n          </button>\n        ) : (\n          <button\n            className=\"btn btn-lg btn-success\"\n            onClick={this.handleClickPayMusic}\n          >\n            Mode immersion\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PlayerAudio;\n"]},"metadata":{},"sourceType":"module"}