{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Conf from \"../config/config-dev\";\n/**\n * Request auto complete api .gouv\n */\n\nclass FetchAutoComplete {\n  constructor() {\n    _defineProperty(this, \"getAutoCompletion\", (inputValue, displaySelection) => {\n      let query = `${Conf.api[\"auto-complet\"].END_POINT}${Conf.api[\"auto-complet\"].URI}q=${inputValue}?type=housenumber&amp;autocomplete=1`;\n      return fetch(query).then(response => {\n        if (response.status === 200) return response.json();else throw new Error(\"Problème de réponse \", response);\n      }).then(data => {\n        //console.log(\"Data: \", data);\n        displaySelection(data);\n      });\n    });\n  }\n\n}\n\nexport default FetchAutoComplete;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/services/FetchAutocomplete.js"],"names":["Conf","FetchAutoComplete","inputValue","displaySelection","query","api","END_POINT","URI","fetch","then","response","status","json","Error","data"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AAGA;;;;AAGA,MAAMC,iBAAN,CAAwB;AAAA;AAAA,+CAGF,CAACC,UAAD,EAAaC,gBAAb,KAAkC;AACpD,UAAIC,KAAK,GAAI,GAAEJ,IAAI,CAACK,GAAL,CAAS,cAAT,EAAyBC,SAAU,GAAEN,IAAI,CAACK,GAAL,CAAS,cAAT,EAAyBE,GAAI,KAAIL,UAAW,sCAAhG;AAEA,aAAOM,KAAK,CAACJ,KAAD,CAAL,CACJK,IADI,CACEC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAT,EAAP,CAA7B,KACK,MAAM,IAAIC,KAAJ,CAAU,sBAAV,EAAkCH,QAAlC,CAAN;AACN,OAJI,EAKJD,IALI,CAKEK,IAAD,IAAU;AACd;AACAX,QAAAA,gBAAgB,CAACW,IAAD,CAAhB;AACD,OARI,CAAP;AASD,KAfqB;AAAA;;AAAA;;AAiBxB,eAAeb,iBAAf","sourcesContent":["import Conf from \"../config/config-dev\";\n\n\n/**\n * Request auto complete api .gouv\n */\nclass FetchAutoComplete {\n\n\n  getAutoCompletion = (inputValue, displaySelection) => {\n    let query = `${Conf.api[\"auto-complet\"].END_POINT}${Conf.api[\"auto-complet\"].URI}q=${inputValue}?type=housenumber&amp;autocomplete=1`;\n\n    return fetch(query)\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        else throw new Error(\"Problème de réponse \", response);\n      })\n      .then((data) => {\n        //console.log(\"Data: \", data);\n        displaySelection(data);\n      });\n  };\n}\nexport default FetchAutoComplete;\n"]},"metadata":{},"sourceType":"module"}