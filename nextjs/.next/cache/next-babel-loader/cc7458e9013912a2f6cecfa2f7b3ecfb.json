{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/weather/Weather.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FetchWeather from \"../../services/FetchWeather\";\nimport Widget from \"./widget/Widget\";\nimport Loader from \"../loader/Loader\";\n\nvar Weather = /*#__PURE__*/function (_Component) {\n  _inherits(Weather, _Component);\n\n  var _super = _createSuper(Weather);\n\n  function Weather(props) {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeCity\", function (_ref) {\n      var target = _ref.target;\n      var city = target.value; //console.log(\"Dans handleChangeCity : \", city);\n\n      var copyState = _objectSpread({}, _this.state);\n\n      copyState.fetchWeather = new FetchWeather(city);\n      copyState.fetchWeather.getCurrentWeather(_this.successGetCurrentWeather, _this.failedGetCurrentWeather);\n\n      _this.setState(copyState);\n\n      _this.setLoading();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setLoading\", function () {\n      var copyState = _objectSpread({}, _this.state);\n\n      copyState.isLoading = true;\n\n      _this.setState(copyState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"successGetCurrentWeather\", function (currentWeather) {\n      var copyState = _objectSpread({}, _this.state); // console.log(\"Dans successGetCurrentWeather : \", currentWeather);\n\n\n      copyState.currentWeather = currentWeather;\n      copyState.isLoading = false;\n\n      _this.setState(copyState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"failedGetCurrentWeather\", function (error) {\n      console.log(\"Dans failedGetCurrentWeather\", error);\n    });\n\n    _this.state = {\n      currentWeather: null,\n      fetchWeather: new FetchWeather(\"Paris\"),\n      isLoading: false\n    };\n    return _this;\n  }\n  /**\n   * Launch fetchWeather onChange\n   */\n\n\n  _createClass(Weather, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container weather \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"row mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"col-md mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, __jsx(\"h3\", {\n        className: \"text-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"Widget M\\xE9t\\xE9o\"), __jsx(\"p\", {\n        className: \"text-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, \"Choisissez une ville pour obtenir la m\\xE9t\\xE9o des 3 prochaines heures.\"), __jsx(\"select\", {\n        id: \"city\",\n        className: \"form-control\",\n        onChange: this.handleChangeCity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, __jsx(\"option\", {\n        value: \"Paris\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \"--Choisissez une ville--\"), __jsx(\"option\", {\n        value: \"Montpellier\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Montpellier\"), __jsx(\"option\", {\n        value: \"Paris\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"Paris\"), __jsx(\"option\", {\n        value: \"Marseilles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \"Marseilles\"), __jsx(\"option\", {\n        value: \"Bordeaux\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Bordeaux\"), __jsx(\"option\", {\n        value: \"Tours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, \"Tours\"), __jsx(\"option\", {\n        value: \"Toulouse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \"Toulouse\"), __jsx(\"option\", {\n        value: \"Lyon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Lyon\")), this.state.isLoading && __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 40\n        }\n      })), this.state.currentWeather && !this.state.isLoading && __jsx(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, __jsx(Widget, {\n        main: this.state.currentWeather.main,\n        weather: this.state.currentWeather.weather[0],\n        city: this.state.currentWeather.name,\n        wind: this.state.currentWeather.wind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/matschik/Code/_matschik/infinity-dev-v2/nextjs/src/components/weather/Weather.jsx"],"names":["React","Component","FetchWeather","Widget","Loader","Weather","props","target","city","value","copyState","state","fetchWeather","getCurrentWeather","successGetCurrentWeather","failedGetCurrentWeather","setState","setLoading","isLoading","currentWeather","error","console","log","handleChangeCity","main","weather","name","wind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FetchWeather from \"../../services/FetchWeather\";\nimport Widget from \"./widget/Widget\";\nimport Loader from \"../loader/Loader\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentWeather: null,\n      fetchWeather : new FetchWeather(\"Paris\"),\n      isLoading : false\n    };\n  }\n\n  /**\n   * Launch fetchWeather onChange\n   */\n  handleChangeCity = ({target}) => {\n    const city = target.value\n    //console.log(\"Dans handleChangeCity : \", city);\n    const copyState = { ...this.state };\n    copyState.fetchWeather = new FetchWeather(city);\n    copyState.fetchWeather.getCurrentWeather(\n      this.successGetCurrentWeather,\n      this.failedGetCurrentWeather\n      );\n    this.setState(copyState);\n    this.setLoading();\n    \n  }\n\n  setLoading = () => {\n    const copyState = { ...this.state };\n    copyState.isLoading = true;\n    this.setState(copyState);\n  }\n\n  /**\n   * Called if fetch success\n   * @param {object} currentWeather\n   */\n  successGetCurrentWeather = (currentWeather) => {\n    const copyState = { ...this.state };\n   // console.log(\"Dans successGetCurrentWeather : \", currentWeather);\n    copyState.currentWeather = currentWeather;\n    copyState.isLoading = false;\n    this.setState(copyState);\n  };\n\n  /**\n   * Called if fetch failed\n   * @param {object} currentWeather\n   */\n  failedGetCurrentWeather = (error) => {\n    console.log(\"Dans failedGetCurrentWeather\", error);\n  };\n\n  render() {\n    return (\n        <div className=\"container weather \">\n          <div className=\"row mt-5\">\n            <div className=\"col-md mb-5\">\n              <h3 className=\"text-primary\">Widget Météo</h3>\n              <p className=\"text-secondary\">\n                Choisissez une ville pour obtenir la météo des 3 prochaines\n                heures.\n              </p>\n              <select\n                id=\"city\"\n                className=\"form-control\"\n                onChange={this.handleChangeCity}\n              >\n                <option value=\"Paris\">--Choisissez une ville--</option>\n                <option value=\"Montpellier\">Montpellier</option>\n                <option value=\"Paris\">Paris</option>\n                <option value=\"Marseilles\">Marseilles</option>\n                <option value=\"Bordeaux\">Bordeaux</option>\n                <option value=\"Tours\">Tours</option>\n                <option value=\"Toulouse\">Toulouse</option>\n                <option value=\"Lyon\">Lyon</option>\n              </select>\n              {this.state.isLoading && <Loader />}\n            </div>\n            {this.state.currentWeather && !this.state.isLoading && (\n              <div className=\"col\">\n                <Widget\n                  main={this.state.currentWeather.main}\n                  weather={this.state.currentWeather.weather[0]}\n                  city={this.state.currentWeather.name}\n                  wind={this.state.currentWeather.wind}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}